<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="we.are.Mapper.OrderMapper">

	<!-- 수주 등록 insert -->
	<insert id="order_insert">
		<!-- INSERT INTO orderr (uuid, ocount, recount, iocount, otext) VALUE (#{uuid_short()}, 
			#{ocount}, #{recount}, #{iocount}, #{otext}); -->

		INSERT INTO
		orderr (uuid, cname, pproduct, pprice, ocount, recount, iocount, osum,
		omanager, otext)
		VALUE (uuid_short(),#{cname}, #{pproduct}, #{pprice},
		#{ocount}, #{recount}, #{iocount}, #{osum}, #{omanager}, #{otext});
	</insert>


	<!--제품 리스트 -->
	<select id="product_select"
		resultType="we.are.Model.InventoryDTO">
		select * from product;
	</select>


	<!-- 수주 목록 리스트 + 날짜 기간 조회 select -->
	<select id="order_select" resultType="we.are.Model.OrderDTO">
		select *
		from (
		select @rownum:=@rownum+1 rownum, b.*
		from orderr b,
		(select @rownum:=0) as tmp
		<if test="search != null">
			<!-- search(input버튼) null이 아니면 -->
			<choose>
				<!-- startday값이 null값이 아니고 '빈값'이 아니고 endday값이 null값이 아니고 '빈값'이 아니면 -->
				<!-- oday에서 startday부터 endday까지 select 해라 -->
				<when
					test="startday != null and startday != '' and endday != null and endday != '' "> 
	       	 <![CDATA[	           
	           where oday BETWEEN #{startday} AND #{endday}
	        	]]>
				</when>
				<!-- startday값이 null값이 아니고 '빈값'이 아닌 endday값이 null이거나 '빈값'이면 -->
				<!-- oday에서 시작 날짜 이후 목록 select 해라 -->
				<when
					test="startday != null and startday != '' and endday == null or endday == '' ">
      	 	<![CDATA[      	 		
      	 		where oday >= #{startday}
      	 	 ]]>
				</when>
				<!-- startday값이 null이거나 '빈값'이고 endday값이 null값이 아니고 '빈값'이 아니면 -->
				<!-- oday에서 종료날짜 이전 목록 select 해라 -->
				<when
					test="startday == null or startday == '' and endday != null and endday != '' ">
      	 	<![CDATA[      	 		
      	 		where oday <= #{endday}
      	 	 ]]>
				</when>
			</choose>
		</if>
		order by oday desc
		) as orderr			 
		<![CDATA[
 			where rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount} 
			]]>
	</select>

	<update id="suju_update">
		update orders set sujuday = current_date(), sujubox =
		"발 행" where bno =
		#{bno};
	</update>

	<!-- total을 위한 select -->
	<select id="total" resultType="int">
		SELECT COUNT(*) FROM orderr;
	</select>


	<select id="sujuletter_select"
		resultType="we.are.Model.OrderDTO">
		SELECT * FROM orders WHERE bno = #{bno};
	</select>


	<!-- DTO 2개를 합쳐서 JOIN으로 검색된 값을 넣기 위한 쿼리문. -->
	<!-- <resultMap type="we.are.Model.SujuDTO" id="SujuDTO"> 4. resultMap="SujuDTO"로 
		검색된 id="SujuDTO"에 연결 "we.are.Model.SujuDTO" 위치에 값을 저장함. -->
	<!-- <result column="spayment" property="spayment" /> -->
	<!-- <result column="sdelivery" property="sdelivery" /> -->
	<!-- </resultMap> -->

	<!-- <resultMap type="we.are.Model.BaljuDTO" id="Balju">2. resultMap="Balju"로 
		검색된 id="balju"에 연결 "we.are.Model.BaljuDTO" 위치에 값을 저장함 -->
	<!-- <result column="bno" property="bno" /> -->
	<!-- <result column="baljuday" property="baljuday" /> -->
	<!-- <result column="bnumber" property="bnumber" /> -->
	<!-- <result column="bname" property="bname" /> -->
	<!-- <result column="bproduct" property="bproduct" /> -->
	<!-- <result column="bcount" property="bcount" /> -->
	<!-- <result column="bsum" property="bsum" /> -->
	<!-- <result column="pprice" property="pprice" /> -->
	<!-- <collection property="SujuDTO" resultMap="SujuDTO" /> 3. collection을 
		이용하여 더 할 값을 검색 resultMap="SujuDTO"로 이동 -->
	<!-- </resultMap> -->


	<!-- <select id="balju_select" parameterType="String" resultMap="Balju"> 
		1. db의 select 값을 parameterType string타입으로 전송 > resultMap="Balju"으로 이동 -->
	<!-- select a.bno, a.baljuday, a.bnumber, a.bname, a.bproduct, a.bcount, 
		a.bsum, b.sdelivery, b.spayment, a.pprice from balju a left join suju b on 
		a.bno = b.bno; -->
	<!-- </select> -->

</mapper>